{"mappings":"AAAA;AAEA,MAAM,eAAe,SAAS,cAAc;AAC5C,MAAM,gBAAgB,SAAS,cAAc;AAC7C,MAAM,UAAU,SAAS,iBAAiB;AAC1C,MAAM,YAAY,SAAS,iBAAiB;AAC5C,MAAM,WAAW,SAAS,cAAc;AACxC,IAAI,iBAAiB,SAAS,cAAc;AAC5C,IAAI,kBAAkB,SAAS,cAAc;AAE7C,SAAS,sBAAsB,KAAK;IAClC,eAAe,eAAe;AAChC;AAEA,SAAS,uBAAuB,KAAK;IACnC,gBAAgB,eAAe;AACjC;AAEA,QAAQ,QAAQ,CAAC;IACf,OAAO,iBAAiB,SAAS;QAC/B,MAAM,YAAY,OAAO;QACzB,sBAAsB;IACxB;AACF;AAEA,SAAS;IACP,eAAe,cAAc;IAC7B,gBAAgB,cAAc;IAC9B,UAAU,cAAc;AAC1B;AAEA,aAAa,iBAAiB,SAAS;IACrC;AACF;AAEA,SAAS;IACP,MAAM,cAAc,eAAe,YAAY;IAC/C,IAAI,YAAY,SAAS,GAAG;QAC1B,MAAM,UAAU,YAAY,MAAM,GAAG;QACrC,eAAe,cAAc;IAC/B;AACF;AAEA,cAAc,iBAAiB,SAAS;IACtC;AACF;AAEA,SAAS,eAAe,IAAI;IAC1B,IAAI,eAAe,gBAAgB,IACjC;IAEF,IAAI,gBAAgB,eAAe,IACjC,UAAU,cAAc;IAE1B,UAAU,cAAc;IACxB,gBAAgB,cAAc,eAAe;IAC7C,eAAe,cAAc;AAC/B;AAEA,SAAS;IACP,IAAI;IACJ,MAAM,cAAc,WAAW,gBAAgB;IAC/C,MAAM,gBAAgB,WAAW,eAAe;IAChD,IAAI,MAAM,gBAAgB,MAAM,gBAAgB;IAEhD,OAAQ,UAAU;QAChB,KAAK;YACH,WAAW,cAAc;YACzB;QACF,KAAK;YACH,WAAW,cAAc;YACzB;QACF,KAAK;YACH,WAAW,cAAc;YACzB;QACF,KAAK;YACH,WAAW,cAAc;YACzB;QACA;YACE;IACN;IACE,eAAe,cAAc;IAC7B,gBAAgB,cAAc;IAC9B,UAAU,cAAc;IACxB,QAAQ,IAAI,eAAe;AAC/B;AAEA,UAAU,QAAQ,CAAC;IACjB,SAAS,iBAAiB,SAAS;QACjC,eAAe,UAAU;IAC3B;AACF;AAEA,mCAAmC;AACnC,2CAA2C;AAC3C,wCAAwC;AACxC,yCAAyC;AACzC,IAAI;AAGJ,SAAS,iBAAiB,SAAS;IAC/B,sBAAsB,GAAI;AAC1B,4BAA4B;AAChC","sources":["app.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst displayClear = document.querySelector(\".displayClear\");\r\nconst deleteDisplay = document.querySelector(\".delete\");\r\nconst numbers = document.querySelectorAll(\".number\");\r\nconst operators = document.querySelectorAll(\".operator\");\r\nconst equality = document.querySelector(\".equal\");\r\nlet currentOperand = document.querySelector(\".current-operand\");\r\nlet previousOperand = document.querySelector(\".previous-operand\");\r\n\r\nfunction displayCurrentOperand(input) {\r\n  currentOperand.textContent += input;\r\n}\r\n\r\nfunction displayPreviousOperand(input) {\r\n  previousOperand.textContent += input;\r\n}\r\n\r\nnumbers.forEach((number) => {\r\n  number.addEventListener(\"click\", () => {\r\n    const userInput = number.textContent;\r\n    displayCurrentOperand(userInput);\r\n  });\r\n});\r\n\r\nfunction allClear() {\r\n  currentOperand.textContent = \"\";\r\n  previousOperand.textContent = \"\";\r\n  operators.textContent = undefined;\r\n}\r\n\r\ndisplayClear.addEventListener(\"click\", () => {\r\n  allClear();\r\n});\r\n\r\nfunction toDelete() {\r\n  const currentText = currentOperand.textContent.toString();\r\n  if (currentText.length > 0) {\r\n    const newText = currentText.slice(0, -1);\r\n    currentOperand.textContent = newText;\r\n  }\r\n}\r\n\r\ndeleteDisplay.addEventListener(\"click\", () => {\r\n  toDelete();\r\n});\r\n\r\nfunction selectOperator(sign) {\r\n  if (currentOperand.textContent === \"\") {\r\n    return;\r\n  }\r\n  if (previousOperand.textContent != \"\") {\r\n    operators.textContent = sign;\r\n  }\r\n  operators.textContent = sign;\r\n  previousOperand.textContent = currentOperand.textContent;\r\n  currentOperand.textContent = \"\";\r\n}\r\n\r\nfunction calculate() {\r\n  let computed;\r\n  const firstNumber = parseFloat(previousOperand.textContent);\r\n  const currentNumber = parseFloat(currentOperand.textContent);\r\n  if (isNaN(firstNumber) || isNaN(currentNumber)) return;\r\n\r\n  switch (operators.textContent) {\r\n    case \"+\":\r\n      computed = firstNumber + currentNumber;\r\n      break;\r\n    case \"-\":\r\n      computed = firstNumber - currentNumber;\r\n      break;\r\n    case \"*\":\r\n      computed = firstNumber * currentNumber;\r\n      break;\r\n    case \"/\":\r\n      computed = firstNumber / currentNumber;\r\n      break;\r\n      default:\r\n        return;\r\n  }\r\n    currentOperand.textContent = computed;\r\n    previousOperand.textContent = '';\r\n    operators.textContent = undefined;\r\n    console.log(currentOperand.textContent)\r\n}\r\n\r\noperators.forEach((operator) => {\r\n  operator.addEventListener(\"click\", () => {\r\n    selectOperator(operators.textContent);\r\n  });\r\n});\r\n\r\n// function displayResult(result) {\r\n//     currentOperand.textContent = result;\r\n//     previousOperand.textContent = '';\r\n//     operators.textContent = undefined;\r\n// }\r\n\r\n\r\nequality.addEventListener(\"click\", () => {\r\n    /* const resultText = */  calculate()\r\n    // displayResult(resultText)\r\n});\r\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}